generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model flyway_schema_history {
  installed_rank Int      @id(map: "flyway_schema_history_pk")
  version        String?  @db.VarChar(50)
  description    String   @db.VarChar(200)
  type           String   @db.VarChar(20)
  script         String   @db.VarChar(1000)
  checksum       Int?
  installed_by   String   @db.VarChar(100)
  installed_on   DateTime @default(now()) @db.Timestamp(6)
  execution_time Int
  success        Boolean

  @@index([success], map: "flyway_schema_history_s_idx")
}

model course_trainees {
  course_id  Int
  trainee_id Int
  courses    courses @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users   @relation(fields: [trainee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([course_id, trainee_id])
}

model courses {
  id              Int               @id @default(autoincrement())
  title           String            @db.VarChar(255)
  description     String?
  trainer_id      Int?
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  updated_at      DateTime?         @default(now()) @db.Timestamp(6)
  course_trainees course_trainees[]
  users           users?            @relation(fields: [trainer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  modules         modules[]
  progress        progress[]
}

model modules {
  id         Int        @id @default(autoincrement())
  title      String     @db.VarChar(255)
  course_id  Int?
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  courses    courses?   @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  progress   progress[]
}

model progress {
  id         Int       @id @default(autoincrement())
  trainee_id Int?
  course_id  Int?
  module_id  Int?
  status     String?   @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  courses    courses?  @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  modules    modules?  @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [trainee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  email           String            @db.VarChar(255)
  password        String            @db.VarChar(255)
  course_trainees course_trainees[]
  courses         courses[]
  progress        progress[]
}
